// Вычислить а в степени n

int PowerFor(int a, int n) //о простой итеративный метод будет выглядеть как

{ 
    int result = 1;
    for (int i = 1; i <= n; i++) result *= a; // перебор счётчика от 1 до n и домножения результата на текущее значение 
    //так называемого основания степени. А n — это показатель степени.
    return result;
}

int PowerRec(int a, int n)
{ 
    //return n == 0 ? 1 : PowerRec(a, n - 1) * a; //если хотите уменьшить число строк, то язык C# позволяет использовать 
    //так называемый тернарный оператор
    if (n == 0) return 1; //опишем условия выхода — начнём читать код от «если n равно 0, то возвращаем единицу
    else return PowerRec(a, n - 1) * a; //вызов рекурсивной функции, где в качестве аргумента передаём основания нашей степени 
    //и показатель на 1 меньше
}

//Мы говорили о формулах сокращённого возведения в степень. Значит, в ситуации, прикоторой будет чётная степень, 
// мы можем сразу же умножать число на само себя, а показатель степени уменьшать в два раза. 
int PowerRecMath(int a, int n)
{
    if (n == 0) return 1;
    else if (n % 2 == 0) return PowerRecMath(a * a, n / 2); // Есть две формулы. Соответственно, применив их, мы можем сильно улучшить 
    //решение нашей задачи. 
    else return PowerRecMath(a, n - 1) * a;
}


Console.WriteLine(PowerFor(2, 10)); // 1024
Console.WriteLine(PowerRec(2, 10)); // 1024
Console.WriteLine(PowerRecMath(2, 10)); // 1024



