// Перебор слов при помищи рекурсии

int n = 1; // сам по себе подсчёт этих символов нам абсолютно не нужен, но чтобы убедиться что количество символов алфавита в степени количества букв подтвердило нам
void FindWords(string alphabet, char[] word, int length = 0) // метод, который будет принимать наш алфафит и передаём его строкой string alphabet, 
//далее массив char[] который будет состоять из букв, и длина нашего слова int length
{
    if (length == word.Length) // описываем условие выхода из рекурсии если длина нашего массива как раз таки совпала с текущей длиной, 
    //которую получили на текущем вызове рекурсии, тогда будем просто показывать получившееся слово и на этом заканчивать
    {
        Console.WriteLine($"{n++} {new String(word)}"); return;
    }
    for (int i = 0; i < alphabet.Length; i++) // В противном случае потребуется запустить цикл по всем элементам нашего алфавита, 
    //чтобы собрать очередное слово
    {
        word[length] = alphabet[i];
        FindWords(alphabet, word, length + 1);
    }
}

FindWords("аисв", new char[5]);
